<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <title>Mapa de Domiciliarios</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        #map { height: 100%; }
    </style>
</head>
<body class="bg-gray-900 text-white">
    <div class="flex h-screen">
        <!-- Sección del mapa (izquierda) -->
        <div class="w-2/3 p-4">
            <div class="w-full h-full bg-gray-700 rounded-lg">
                <div id="map"></div>
            </div>
        </div>

        <!-- Sección de lista y detalles (derecha) -->
        <div class="w-1/3 flex flex-col">
            <!-- Lista de domiciliarios -->
            <div class="h-1/2 p-4 bg-gray-800 overflow-y-auto">
                <h2 class="text-xl font-bold mb-4">Lista de domiciliarios:</h2>
                <ul>
                    <li class="mb-2">
                        <span class="inline-block w-3 h-3 rounded-full bg-purple-500 mr-2"></span>
                        nicolas GDD-23A
                    </li>
                    <li class="mb-2">
                        <span class="inline-block w-3 h-3 rounded-full bg-blue-500 mr-2"></span>
                        Carlos HFO-56D
                    </li>
                    <li class="mb-2">
                        <span class="inline-block w-3 h-3 rounded-full bg-green-500 mr-2"></span>
                        juan JHI-78F
                    </li>
                </ul>
            </div>

            <!-- Detalles del domiciliario seleccionado -->
            <div class="h-1/2 p-4 bg-gray-700">
                <h2 class="text-xl font-bold mb-4">Detalles del domiciliario</h2>
                <p class="mb-4">Seleccione un domiciliario para obtener más detalles.</p>
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const socket = io('https://60sgw4z5-3000.use.devtunnels.ms/');
        
            var map = L.map('map').setView([4.1161341, -73.6091948], 20);
        
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);
            const iconos = {
                iconoRojo: L.icon({
                    iconUrl: 'https://res.cloudinary.com/dayyizlq6/image/upload/v1728608263/icons/openmoji--motorbike-helmet_2_ucnsvh.png', // URL del icono rojo
                    iconSize: [38, 38], // Tamaño del icono
                    iconAnchor: [19, 38], // Punto del icono que se posicionará en la ubicación
                    popupAnchor: [0, -38] // Punto desde donde se abrirá el popup hacia arriba
                }),
                iconoAzul: L.icon({
                    iconUrl: 'https://res.cloudinary.com/dayyizlq6/image/upload/v1728608257/icons/openmoji--motorbike-helmet_dh88pa.png', // URL del icono azul
                    iconSize: [38, 38], // Tamaño del icono
                    iconAnchor: [19, 38], // Punto del icono que se posicionará en la ubicación
                    popupAnchor: [0, -38] // Punto desde donde se abrirá el popup hacia arriba
                })
            };
            // Objeto para almacenar los marcadores de los usuarios
            const markers = {};
        
            // Escucha las actualizaciones de ubicación desde el servidor
            const getIcon = (userId) => {
                // Puedes basarte en alguna lógica para elegir el icono, por ejemplo:
                return userId.includes('A') ? iconos.iconoRojo : iconos.iconoAzul;
            };
            
            socket.on('locationsUpdate', (users) => {
                // Actualiza los marcadores para cada usuario en el mapa
                Object.keys(users).forEach((userId) => {
                    const { latitude, longitude } = users[userId];
            
                    if (!markers[userId]) {
                        // Si no existe un marcador para este usuario, se crea uno
                        markers[userId] = L.marker([latitude, longitude], {
                            icon: getIcon(userId)
                        }).addTo(map);
                    } else {
                        // Si el marcador ya existe, se actualiza su ubicación
                        markers[userId].setLatLng([latitude, longitude]);
                    }
                });
            });
            
            socket.on('userDisconnected', (userId) => {
                // Si un usuario se desconecta, elimina su marcador del mapa
                if (markers[userId]) {
                    map.removeLayer(markers[userId]);
                    delete markers[userId];
                }
            });
        });
        
    </script>
</body>
</html>
