
<meta charset="UTF-8">
<div class="flex min-h-full flex-col justify-center py-12 sm:px-6 lg:px-8">
  <a href="/" class="inline-block">
    <button class="bg-white p-1 shadow-2xl rounded-lg w-12 h-12 flex items-center justify-center border-2">
      <img
        src="https://res.cloudinary.com/dlxf1d5ag/image/upload/v1732078619/llo/61449_qfoqtz.png"
        alt="Imagen del botón"
        width="24"
        height="24"
      />
    </button>
  </a>
  <div class="mt-6 sm:mx-auto sm:w-full sm:max-w-[480px]">
    <div class="bg-white px-6 py-12 shadow-2xl sm:rounded-lg sm:px-10">
      <div class="sm:mx-auto sm:w-full sm:max-w-md">
        <img
          class="mx-auto size-20 w-auto"
          src="https://res.cloudinary.com/dlxf1d5ag/image/upload/v1711156717/llo/crear-removebg-preview_g6aiqb.png"
          alt="Your Company"
        />
        <h2
          class="mt-6 text-center text-2xl font-bold leading-2 tracking-tight text-gray-900 font-montserrat"
        >
          Registrar Facilitador
        </h2>
      </div>

      <form id="registerForm" class="mt-2 space-y-6">
        <div>
          <label
            for="nombre"
            class="block text-sm font-medium leading-6 text-gray-900 font-montserrat"
          >
            Nombre
          </label>
          <div class="mt-2">
            <input
              id="nombre"
              name="nombre"
              type="text"
              autocomplete="off"
              pattern="[A-Za-z\s]+"
              required
              class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <label
            for="apellido"
            class="block text-sm font-medium leading-6 text-gray-900 font-montserrat"
          >
            Apellidos
          </label>
          <div class="mt-2">
            <input
              id="apellido"
              name="apellido"
              type="text"
              autocomplete="family-name"
              required
              class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <label
            for="cedula"
            class="block text-sm font-medium leading-6 text-gray-900 font-montserrat"
          >
            Cédula
          </label>
          <div class="mt-2">
            <input
              id="cedula"
              name="cedula"
              type="number"
              required
              class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <label
            for="telefono"
            class="block text-sm font-medium leading-6 text-gray-900 font-montserrat"
          >
            Telefono
          </label>
          <div class="mt-2">
            <input
              id="telefono"
              name="telefono"
              type="number"
              required
              class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <label
            for="password"
            class="block text-sm font-medium leading-6 text-gray-900 font-montserrat"
          >
            Contraseña
          </label>
          <div class="mt-2">
            <input
              id="password"
              name="password"
              type="password"
              required
              class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <label
            for="password2"
            class="block text-sm font-medium leading-6 text-gray-900 font-montserrat"
          >
            Repetir Contraseña
          </label>
          <div class="mt-2">
            <input
              id="password2"
              name="password2"
              type="password"
              required
              class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-customBlue-600 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <button
            type="submit"
            class="flex w-full justify-center rounded-md bg-customBlue-600 px-4 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-customBlue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-customBlue-600 font-montserrat"
          >
            Registrar Facilitador
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  const form = document.getElementById('registerForm');

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(e.target as HTMLFormElement);
    const password1 = formData.get('password');
    const password2 = formData.get('password2');

    if (password1 !== password2) {
      alert('Las contraseñas no coinciden');
      return;
    }

    const facilitadorData = {
      cedula: formData.get('cedula'),
      password: password1,
      nombre: formData.get('nombre'),
      apellido: formData.get('apellido'),
      telefono: formData.get('telefono'),
      estado: "Disponible",
      administrador: "ed"
    };

    try {
      const response = await fetch('https://60sgw4z5-8000.use.devtunnels.ms/api/v1/domi/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(facilitadorData)
      });

      if (!response.ok) {
        throw new Error('Error al registrar el facilitador');
      }

      const data = await response.json();
      alert('Facilitador registrado exitosamente');
      (e.target as HTMLFormElement).reset();
    } catch (error) {
      alert('Error al registrar: ' + (error as Error).message);
    }
  });
</script>